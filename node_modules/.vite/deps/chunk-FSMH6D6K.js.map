{
  "version": 3,
  "sources": ["../../.pnpm/svelte@5.0.0-next.123/node_modules/svelte/src/internal/client/utils.js", "../../.pnpm/svelte@5.0.0-next.123/node_modules/svelte/src/internal/client/constants.js", "../../.pnpm/svelte@5.0.0-next.123/node_modules/svelte/src/internal/client/reactivity/equality.js", "../../.pnpm/svelte@5.0.0-next.123/node_modules/svelte/src/internal/client/errors.js", "../../.pnpm/svelte@5.0.0-next.123/node_modules/svelte/src/internal/client/reactivity/sources.js", "../../.pnpm/svelte@5.0.0-next.123/node_modules/svelte/src/internal/client/dom/reconciler.js", "../../.pnpm/svelte@5.0.0-next.123/node_modules/svelte/src/internal/client/reactivity/effects.js", "../../.pnpm/svelte@5.0.0-next.123/node_modules/svelte/src/internal/client/dom/task.js", "../../.pnpm/svelte@5.0.0-next.123/node_modules/svelte/src/internal/client/warnings.js", "../../.pnpm/svelte@5.0.0-next.123/node_modules/svelte/src/internal/client/dev/ownership.js", "../../.pnpm/svelte@5.0.0-next.123/node_modules/svelte/src/internal/client/reactivity/deriveds.js", "../../.pnpm/svelte@5.0.0-next.123/node_modules/svelte/src/internal/client/dev/inspect.js", "../../.pnpm/svelte@5.0.0-next.123/node_modules/svelte/src/internal/client/runtime.js", "../../.pnpm/svelte@5.0.0-next.123/node_modules/svelte/src/internal/client/proxy.js", "../../.pnpm/svelte@5.0.0-next.123/node_modules/svelte/src/internal/client/dom/hydration.js", "../../.pnpm/svelte@5.0.0-next.123/node_modules/svelte/src/internal/client/dom/operations.js", "../../.pnpm/svelte@5.0.0-next.123/node_modules/svelte/src/internal/client/dom/elements/events.js", "../../.pnpm/svelte@5.0.0-next.123/node_modules/svelte/src/internal/client/dom/blocks/svelte-head.js", "../../.pnpm/svelte@5.0.0-next.123/node_modules/svelte/src/internal/client/render.js", "../../.pnpm/svelte@5.0.0-next.123/node_modules/svelte/src/legacy/legacy-client.js"],
  "sourcesContent": ["// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var object_assign = Object.assign;\nexport var is_frozen = Object.isFrozen;\nexport var object_freeze = Object.freeze;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\n\n/** @type {Map<any, any>} */\nvar map_prototype = Map.prototype;\nvar map_set_method = map_prototype.set;\nvar map_get_method = map_prototype.get;\n\n/**\n * @template K\n * @template V\n * @param {Map<K, V>} map\n * @param {K} key\n * @param {V} value\n */\nexport function map_set(map, key, value) {\n\tmap_set_method.call(map, key, value);\n}\n\n/**\n * @template K\n * @template V\n * @param {Map<K, V>} map\n * @param {K} key\n * @return {V}\n */\nexport function map_get(map, key) {\n\treturn map_get_method.call(map, key);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n", "export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const UNOWNED = 1 << 7;\nexport const CLEAN = 1 << 8;\nexport const DIRTY = 1 << 9;\nexport const MAYBE_DIRTY = 1 << 10;\nexport const INERT = 1 << 11;\nexport const DESTROYED = 1 << 12;\nexport const EFFECT_RAN = 1 << 13;\n\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 14;\n\nexport const STATE_SYMBOL = Symbol('$state');\n", "/** @type {import('#client').Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/** @type {import('#client').Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n", "/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`${\"bind_invalid_checkbox_value\"}\\n${\"Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\"}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"bind_invalid_checkbox_value\");\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`${\"bind_invalid_export\"}\\n${`Component ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)`}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"bind_invalid_export\");\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`${\"bind_not_bindable\"}\\n${`A component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\``}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"bind_not_bindable\");\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`${\"each_key_duplicate\"}\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"each_key_duplicate\");\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`${\"effect_in_teardown\"}\\n${`\\`${rune}\\` cannot be used inside an effect cleanup function`}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_in_teardown\");\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`${\"effect_orphan\"}\\n${`\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)`}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_orphan\");\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`${\"effect_update_depth_exceeded\"}\\n${\"Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\"}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_update_depth_exceeded\");\n\t}\n}\n\n/**\n * Missing hydration closing marker\n * @returns {never}\n */\nexport function hydration_missing_marker_close() {\n\tif (DEV) {\n\t\tconst error = new Error(`${\"hydration_missing_marker_close\"}\\n${\"Missing hydration closing marker\"}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"hydration_missing_marker_close\");\n\t}\n}\n\n/**\n * Missing hydration opening marker\n * @returns {never}\n */\nexport function hydration_missing_marker_open() {\n\tif (DEV) {\n\t\tconst error = new Error(`${\"hydration_missing_marker_open\"}\\n${\"Missing hydration opening marker\"}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"hydration_missing_marker_open\");\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`${\"lifecycle_legacy_only\"}\\n${`\\`${name}(...)\\` cannot be used in runes mode`}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"lifecycle_legacy_only\");\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`${\"props_invalid_value\"}\\n${`Cannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value`}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"props_invalid_value\");\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`${\"props_rest_readonly\"}\\n${`Rest element properties of \\`$props()\\` such as \\`${property}\\` are readonly`}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"props_rest_readonly\");\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`${\"rune_outside_svelte\"}\\n${`The \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files`}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"rune_outside_svelte\");\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`${\"state_prototype_fixed\"}\\n${\"Cannot set prototype of `$state` object\"}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"state_prototype_fixed\");\n\t}\n}\n\n/**\n * Unsafe mutations during Svelte's render or derived phase are not permitted in runes mode. This can lead to unexpected errors and possibly cause infinite loops.\n * >\n * If the object is not meant to be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`${\"state_unsafe_mutation\"}\\n${\"Unsafe mutations during Svelte's render or derived phase are not permitted in runes mode. This can lead to unexpected errors and possibly cause infinite loops.\\n>\\nIf the object is not meant to be reactive, declare it without `$state`\"}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"state_unsafe_mutation\");\n\t}\n}\n\n/**\n * The `this={...}` property of a `<svelte:component>` must be a Svelte component, if defined\n * @returns {never}\n */\nexport function svelte_component_invalid_this_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`${\"svelte_component_invalid_this_value\"}\\n${\"The `this={...}` property of a `<svelte:component>` must be a Svelte component, if defined\"}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"svelte_component_invalid_this_value\");\n\t}\n}", "import { DEV } from 'esm-env';\nimport {\n\tcurrent_component_context,\n\tcurrent_reaction,\n\tcurrent_dependencies,\n\tcurrent_effect,\n\tcurrent_untracked_writes,\n\tcurrent_untracking,\n\tget,\n\tis_batching_effect,\n\tis_runes,\n\tmark_reactions,\n\tschedule_effect,\n\tset_current_untracked_writes,\n\tset_last_inspected_signal,\n\tset_signal_status,\n\tuntrack\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport { CLEAN, DERIVED, DIRTY, BRANCH_EFFECT } from '../constants.js';\nimport { UNINITIALIZED } from '../../../constants.js';\nimport * as e from '../errors.js';\n\n/**\n * @template V\n * @param {V} value\n * @returns {import('#client').Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function source(value) {\n\t/** @type {import('#client').Source<V>} */\n\tconst source = {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\treactions: null,\n\t\tequals: equals,\n\t\tv: value,\n\t\tversion: 0\n\t};\n\n\tif (DEV) {\n\t\t/** @type {import('#client').ValueDebug<V>} */ (source).inspect = new Set();\n\t}\n\n\treturn source;\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @returns {import('#client').Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value) {\n\tconst s = source(initial_value);\n\ts.equals = safe_equals;\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (current_component_context !== null && current_component_context.l !== null) {\n\t\t(current_component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {import('#client').Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {import('#client').Source<V>} signal\n * @param {V} value\n * @returns {V}\n */\nexport function set(signal, value) {\n\tvar initialized = signal.v !== UNINITIALIZED;\n\n\tif (\n\t\t!current_untracking &&\n\t\tinitialized &&\n\t\tcurrent_reaction !== null &&\n\t\tis_runes() &&\n\t\t(current_reaction.f & DERIVED) !== 0\n\t) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\tif (!signal.equals(value)) {\n\t\tsignal.v = value;\n\n\t\t// Increment write version so that unowned signals can properly track dirtiness\n\t\tsignal.version++;\n\n\t\t// If the current signal is running for the first time, it won't have any\n\t\t// reactions as we only allocate and assign the reactions after the signal\n\t\t// has fully executed. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e:\n\t\t//\n\t\t// $effect(() => x++)\n\t\t//\n\t\t// We additionally want to skip this logic when initialising store sources\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tinitialized &&\n\t\t\tcurrent_effect !== null &&\n\t\t\t(current_effect.f & CLEAN) !== 0 &&\n\t\t\t(current_effect.f & BRANCH_EFFECT) === 0\n\t\t) {\n\t\t\tif (current_dependencies !== null && current_dependencies.includes(signal)) {\n\t\t\t\tset_signal_status(current_effect, DIRTY);\n\t\t\t\tschedule_effect(current_effect);\n\t\t\t} else {\n\t\t\t\tif (current_untracked_writes === null) {\n\t\t\t\t\tset_current_untracked_writes([signal]);\n\t\t\t\t} else {\n\t\t\t\t\tcurrent_untracked_writes.push(signal);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmark_reactions(signal, DIRTY, true);\n\n\t\tif (DEV) {\n\t\t\tif (is_batching_effect) {\n\t\t\t\tset_last_inspected_signal(/** @type {import('#client').ValueDebug} */ (signal));\n\t\t\t} else {\n\t\t\t\tfor (const fn of /** @type {import('#client').ValueDebug} */ (signal).inspect) fn();\n\t\t\t}\n\t\t}\n\t}\n\n\treturn value;\n}\n", "import { is_array } from '../utils.js';\n\n/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html;\n\treturn elem.content;\n}\n\n/**\n * @param {import('#client').Dom} current\n */\nexport function remove(current) {\n\tif (is_array(current)) {\n\t\tfor (var i = 0; i < current.length; i++) {\n\t\t\tvar node = current[i];\n\t\t\tif (node.isConnected) {\n\t\t\t\tnode.remove();\n\t\t\t}\n\t\t}\n\t} else if (current.isConnected) {\n\t\tcurrent.remove();\n\t}\n}\n", "import {\n\tcheck_dirtiness,\n\tcurrent_component_context,\n\tcurrent_effect,\n\tcurrent_reaction,\n\tdestroy_effect_children,\n\texecute_effect,\n\tget,\n\tis_destroying_effect,\n\tis_flushing_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_is_destroying_effect,\n\tset_is_flushing_effect,\n\tset_signal_status,\n\tuntrack\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT\n} from '../constants.js';\nimport { set } from './sources.js';\nimport { remove } from '../dom/reconciler.js';\nimport * as e from '../errors.js';\n\n/**\n * @param {import('#client').Effect | null} effect\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n * @returns {asserts effect}\n */\nexport function validate_effect(effect, rune) {\n\tif (effect === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {import(\"#client\").Effect} effect\n * @param {import(\"#client\").Reaction} parent_effect\n */\nexport function push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {(() => void | (() => void))} fn\n * @param {boolean} sync\n * @returns {import('#client').Effect}\n */\nfunction create_effect(type, fn, sync) {\n\tvar is_root = (type & ROOT_EFFECT) !== 0;\n\n\t/** @type {import('#client').Effect} */\n\tvar effect = {\n\t\tctx: current_component_context,\n\t\tdeps: null,\n\t\tdom: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent: is_root ? null : current_effect,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null\n\t};\n\n\tif (current_reaction !== null && !is_root) {\n\t\tpush_effect(effect, current_reaction);\n\t}\n\n\tif (sync) {\n\t\tvar previously_flushing_effect = is_flushing_effect;\n\n\t\ttry {\n\t\t\tset_is_flushing_effect(true);\n\t\t\texecute_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} finally {\n\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t}\n\t} else {\n\t\tschedule_effect(effect);\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.active()`\n * @returns {boolean}\n */\nexport function effect_active() {\n\treturn current_effect ? (current_effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 : false;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect(current_effect, '$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tconst defer =\n\t\tcurrent_effect.f & RENDER_EFFECT &&\n\t\t// TODO do we actually need this? removing them changes nothing\n\t\tcurrent_component_context !== null &&\n\t\t!current_component_context.m;\n\n\tif (defer) {\n\t\tconst context = /** @type {import('#client').ComponentContext} */ (current_component_context);\n\t\t(context.e ??= []).push(fn);\n\t} else {\n\t\teffect(fn);\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {import('#client').Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect(current_effect, '$effect.pre');\n\treturn render_effect(fn);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {import('#client').Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {import('#client').ComponentContextLegacy} */ (current_component_context);\n\n\t/** @type {{ effect: null | import('#client').Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail-out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {import('#client').ComponentContextLegacy} */ (current_component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\texecute_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {import('#client').Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/** @param {(() => void)} fn */\nexport function branch(fn) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true);\n}\n\n/**\n * @param {import(\"#client\").Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tset_is_destroying_effect(true);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('#client').Effect} effect\n * @returns {void}\n */\nexport function destroy_effect(effect) {\n\tvar dom = effect.dom;\n\n\tif (dom !== null) {\n\t\tremove(dom);\n\t}\n\n\tdestroy_effect_children(effect);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tif (effect.transitions) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && (effect.f & BRANCH_EFFECT) !== 0 && parent.first !== null) {\n\t\tvar previous = effect.prev;\n\t\tvar next = effect.next;\n\t\tif (previous !== null) {\n\t\t\tif (next !== null) {\n\t\t\t\tprevious.next = next;\n\t\t\t\tnext.prev = previous;\n\t\t\t} else {\n\t\t\t\tprevious.next = null;\n\t\t\t\tparent.last = previous;\n\t\t\t}\n\t\t} else if (next !== null) {\n\t\t\tnext.prev = null;\n\t\t\tparent.first = next;\n\t\t} else {\n\t\t\tparent.first = null;\n\t\t\tparent.last = null;\n\t\t}\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.dom =\n\t\teffect.deps =\n\t\teffect.parent =\n\t\t// @ts-expect-error\n\t\teffect.fn =\n\t\t\tnull;\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {import('#client').Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {import('#client').TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {import('#client').TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {import('#client').Effect} effect\n * @param {import('#client').TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {import('#client').Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {import('#client').Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\teffect.f ^= INERT;\n\n\t// If a dependency of this effect changed while it was paused,\n\t// apply the change now\n\tif (check_dirtiness(effect)) {\n\t\texecute_effect(effect);\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n", "import { run_all } from '../../shared/utils.js';\n\nlet is_task_queued = false;\n\n/** @type {Array<() => void>} */\nlet current_queued_tasks = [];\n\nfunction process_task() {\n\tis_task_queued = false;\n\tconst tasks = current_queued_tasks.slice();\n\tcurrent_queued_tasks = [];\n\trun_all(tasks);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_task(fn) {\n\tif (!is_task_queued) {\n\t\tis_task_queued = true;\n\t\tqueueMicrotask(process_task);\n\t}\n\tcurrent_queued_tasks.push(fn);\n}\n\n/**\n * Synchronously run any queued tasks.\n */\nexport function flush_tasks() {\n\tif (is_task_queued) {\n\t\tprocess_task();\n\t}\n}\n", "/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\nvar bold = 'font-weight: bold';\nvar normal = 'font-weight: normal';\n\n/**\n * The `%attribute%` attribute on `%html%` changed its value between server and client renders. The client value, `%value%`, will be ignored in favour of the server value\n * @param {string} attribute\n * @param {string} html\n * @param {string} value\n */\nexport function hydration_attribute_changed(attribute, html, value) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ${\"hydration_attribute_changed\"}\\n%c${`The \\`${attribute}\\` attribute on \\`${html}\\` changed its value between server and client renders. The client value, \\`${value}\\`, will be ignored in favour of the server value`}`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"hydration_attribute_changed\");\n\t}\n}\n\n/**\n * Hydration failed because the initial UI does not match what was rendered on the server\n */\nexport function hydration_mismatch() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ${\"hydration_mismatch\"}\\n%c${\"Hydration failed because the initial UI does not match what was rendered on the server\"}`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"hydration_mismatch\");\n\t}\n}\n\n/**\n * Tried to unmount a component that was not mounted\n */\nexport function lifecycle_double_unmount() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ${\"lifecycle_double_unmount\"}\\n%c${\"Tried to unmount a component that was not mounted\"}`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"lifecycle_double_unmount\");\n\t}\n}\n\n/**\n * %parent% passed a value to %child% with `bind:`, but the value is owned by %owner%. Consider creating a binding between %owner% and %parent%\n * @param {string} parent\n * @param {string} child\n * @param {string} owner\n */\nexport function ownership_invalid_binding(parent, child, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ${\"ownership_invalid_binding\"}\\n%c${`${parent} passed a value to ${child} with \\`bind:\\`, but the value is owned by ${owner}. Consider creating a binding between ${owner} and ${parent}`}`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"ownership_invalid_binding\");\n\t}\n}\n\n/**\n * %component% mutated a value owned by %owner%. This is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead\n * @param {string | undefined | null} [component]\n * @param {string | undefined | null} [owner]\n */\nexport function ownership_invalid_mutation(component, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ${\"ownership_invalid_mutation\"}\\n%c${`${component} mutated a value owned by ${owner}. This is strongly discouraged. Consider passing values to child components with \\`bind:\\`, or use a callback instead`}`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"ownership_invalid_mutation\");\n\t}\n}", "/** @typedef {{ file: string, line: number, column: number }} Location */\n\nimport { STATE_SYMBOL } from '../constants.js';\nimport { render_effect, user_pre_effect } from '../reactivity/effects.js';\nimport { dev_current_component_function, set_dev_current_component_function } from '../runtime.js';\nimport { get_prototype_of } from '../utils.js';\nimport * as w from '../warnings.js';\n\n/** @type {Record<string, Array<{ start: Location, end: Location, component: Function }>>} */\nconst boundaries = {};\n\nconst chrome_pattern = /at (?:.+ \\()?(.+):(\\d+):(\\d+)\\)?$/;\nconst firefox_pattern = /@(.+):(\\d+):(\\d+)$/;\n\nfunction get_stack() {\n\tconst stack = new Error().stack;\n\tif (!stack) return null;\n\n\tconst entries = [];\n\n\tfor (const line of stack.split('\\n')) {\n\t\tlet match = chrome_pattern.exec(line) ?? firefox_pattern.exec(line);\n\n\t\tif (match) {\n\t\t\tentries.push({\n\t\t\t\tfile: match[1],\n\t\t\t\tline: +match[2],\n\t\t\t\tcolumn: +match[3]\n\t\t\t});\n\t\t}\n\t}\n\n\treturn entries;\n}\n\n/**\n * Determines which `.svelte` component is responsible for a given state change\n * @returns {Function | null}\n */\nfunction get_component() {\n\t// first 4 lines are svelte internals; adjust this number if we change the internal call stack\n\tconst stack = get_stack()?.slice(4);\n\tif (!stack) return null;\n\n\tfor (let i = 0; i < stack.length; i++) {\n\t\tconst entry = stack[i];\n\t\tconst modules = boundaries[entry.file];\n\t\tif (!modules) {\n\t\t\t// If the first entry is not a component, that means the modification very likely happened\n\t\t\t// within a .svelte.js file, possibly triggered by a component. Since these files are not part\n\t\t\t// of the bondaries/component context heuristic, we need to bail in this case, else we would\n\t\t\t// have false positives when the .svelte.ts file provides a state creator function, encapsulating\n\t\t\t// the state and its mutations, and is being called from a component other than the one who\n\t\t\t// called the state creator function.\n\t\t\tif (i === 0) return null;\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (const module of modules) {\n\t\t\tif (module.start.line < entry.line && module.end.line > entry.line) {\n\t\t\t\treturn module.component;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport const ADD_OWNER = Symbol('ADD_OWNER');\n\n/**\n * Together with `mark_module_end`, this function establishes the boundaries of a `.svelte` file,\n * such that subsequent calls to `get_component` can tell us which component is responsible\n * for a given state change\n */\nexport function mark_module_start() {\n\tconst start = get_stack()?.[2];\n\n\tif (start) {\n\t\t(boundaries[start.file] ??= []).push({\n\t\t\tstart,\n\t\t\t// @ts-expect-error\n\t\t\tend: null,\n\t\t\t// @ts-expect-error we add the component at the end, since HMR will overwrite the function\n\t\t\tcomponent: null\n\t\t});\n\t}\n}\n\n/**\n * @param {Function} component\n */\nexport function mark_module_end(component) {\n\tconst end = get_stack()?.[2];\n\n\tif (end) {\n\t\tconst boundaries_file = boundaries[end.file];\n\t\tconst boundary = boundaries_file[boundaries_file.length - 1];\n\n\t\tboundary.end = end;\n\t\tboundary.component = component;\n\t}\n}\n\n/**\n * @param {any} object\n * @param {any} owner\n * @param {boolean} [global]\n */\nexport function add_owner(object, owner, global = false) {\n\tif (object && !global) {\n\t\tconst component = dev_current_component_function;\n\t\tconst metadata = object[STATE_SYMBOL];\n\t\tif (metadata && !has_owner(metadata, component)) {\n\t\t\tlet original = get_owner(metadata);\n\n\t\t\tif (owner.filename !== component.filename) {\n\t\t\t\tw.ownership_invalid_binding(component.filename, owner.filename, original.filename);\n\t\t\t}\n\t\t}\n\t}\n\n\tadd_owner_to_object(object, owner, new Set());\n}\n\n/**\n * @param {() => unknown} get_object\n * @param {any} Component\n */\nexport function add_owner_effect(get_object, Component) {\n\tvar component = dev_current_component_function;\n\tuser_pre_effect(() => {\n\t\tvar prev = dev_current_component_function;\n\t\tset_dev_current_component_function(component);\n\t\tadd_owner(get_object(), Component);\n\t\tset_dev_current_component_function(prev);\n\t});\n}\n\n/**\n * @param {import('#client').ProxyMetadata<any> | null} from\n * @param {import('#client').ProxyMetadata<any>} to\n */\nexport function widen_ownership(from, to) {\n\tif (to.owners === null) {\n\t\treturn;\n\t}\n\n\twhile (from) {\n\t\tif (from.owners === null) {\n\t\t\tto.owners = null;\n\t\t\tbreak;\n\t\t}\n\n\t\tfor (const owner of from.owners) {\n\t\t\tto.owners.add(owner);\n\t\t}\n\n\t\tfrom = from.parent;\n\t}\n}\n\n/**\n * @param {any} object\n * @param {Function} owner\n * @param {Set<any>} seen\n */\nfunction add_owner_to_object(object, owner, seen) {\n\tconst metadata = /** @type {import('#client').ProxyMetadata} */ (object?.[STATE_SYMBOL]);\n\n\tif (metadata) {\n\t\t// this is a state proxy, add owner directly, if not globally shared\n\t\tif (metadata.owners !== null) {\n\t\t\tmetadata.owners.add(owner);\n\t\t}\n\t} else if (object && typeof object === 'object') {\n\t\tif (seen.has(object)) return;\n\t\tseen.add(object);\n\n\t\tif (object[ADD_OWNER]) {\n\t\t\t// this is a class with state fields. we put this in a render effect\n\t\t\t// so that if state is replaced (e.g. `instance.name = { first, last }`)\n\t\t\t// the new state is also co-owned by the caller of `getContext`\n\t\t\trender_effect(() => {\n\t\t\t\tobject[ADD_OWNER](owner);\n\t\t\t});\n\t\t} else {\n\t\t\tvar proto = get_prototype_of(object);\n\n\t\t\tif (proto === Object.prototype) {\n\t\t\t\t// recurse until we find a state proxy\n\t\t\t\tfor (const key in object) {\n\t\t\t\t\tadd_owner_to_object(object[key], owner, seen);\n\t\t\t\t}\n\t\t\t} else if (proto === Array.prototype) {\n\t\t\t\t// recurse until we find a state proxy\n\t\t\t\tfor (let i = 0; i < object.length; i += 1) {\n\t\t\t\t\tadd_owner_to_object(object[i], owner, seen);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {import('#client').ProxyMetadata} metadata\n * @param {Function} component\n * @returns {boolean}\n */\nfunction has_owner(metadata, component) {\n\tif (metadata.owners === null) {\n\t\treturn true;\n\t}\n\n\treturn (\n\t\tmetadata.owners.has(component) ||\n\t\t(metadata.parent !== null && has_owner(metadata.parent, component))\n\t);\n}\n\n/**\n * @param {import('#client').ProxyMetadata} metadata\n * @returns {any}\n */\nfunction get_owner(metadata) {\n\treturn (\n\t\tmetadata?.owners?.values().next().value ??\n\t\tget_owner(/** @type {import('#client').ProxyMetadata} */ (metadata.parent))\n\t);\n}\n\n/**\n * @param {import('#client').ProxyMetadata} metadata\n */\nexport function check_ownership(metadata) {\n\tconst component = get_component();\n\n\tif (component && !has_owner(metadata, component)) {\n\t\tlet original = get_owner(metadata);\n\n\t\t// @ts-expect-error\n\t\tif (original.filename !== component.filename) {\n\t\t\t// @ts-expect-error\n\t\t\tw.ownership_invalid_mutation(component.filename, original.filename);\n\t\t} else {\n\t\t\tw.ownership_invalid_mutation();\n\t\t}\n\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.trace();\n\t}\n}\n", "import { DEV } from 'esm-env';\nimport { CLEAN, DERIVED, DESTROYED, DIRTY, MAYBE_DIRTY, UNOWNED } from '../constants.js';\nimport {\n\tcurrent_reaction,\n\tcurrent_effect,\n\tremove_reactions,\n\tset_signal_status,\n\tmark_reactions,\n\tcurrent_skip_reaction,\n\texecute_reaction_fn,\n\tdestroy_effect_children\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\n\nexport let updating_derived = false;\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {import('#client').Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tlet flags = DERIVED | DIRTY;\n\tif (current_effect === null) flags |= UNOWNED;\n\n\t/** @type {import('#client').Derived<V>} */\n\tconst signal = {\n\t\tdeps: null,\n\t\tderiveds: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\treactions: null,\n\t\tv: /** @type {V} */ (null),\n\t\tversion: 0\n\t};\n\n\tif (DEV) {\n\t\t/** @type {import('#client').DerivedDebug} */ (signal).inspect = new Set();\n\t}\n\n\tif (current_reaction !== null && (current_reaction.f & DERIVED) !== 0) {\n\t\tvar current_derived = /** @type {import('#client').Derived<V>} */ (current_reaction);\n\t\tif (current_derived.deriveds === null) {\n\t\t\tcurrent_derived.deriveds = [signal];\n\t\t} else {\n\t\t\tcurrent_derived.deriveds.push(signal);\n\t\t}\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {import('#client').Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {import('#client').Derived} signal\n * @returns {void}\n */\nfunction destroy_derived_children(signal) {\n\tdestroy_effect_children(signal);\n\tvar deriveds = signal.deriveds;\n\n\tif (deriveds !== null) {\n\t\tsignal.deriveds = null;\n\t\tfor (var i = 0; i < deriveds.length; i += 1) {\n\t\t\tdestroy_derived(deriveds[i]);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('#client').Derived} derived\n * @param {boolean} force_schedule\n * @returns {void}\n */\nexport function update_derived(derived, force_schedule) {\n\tvar previous_updating_derived = updating_derived;\n\tupdating_derived = true;\n\tdestroy_derived_children(derived);\n\tvar value = execute_reaction_fn(derived);\n\tupdating_derived = previous_updating_derived;\n\n\tvar status =\n\t\t(current_skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null\n\t\t\t? MAYBE_DIRTY\n\t\t\t: CLEAN;\n\n\tset_signal_status(derived, status);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tmark_reactions(derived, DIRTY, force_schedule);\n\n\t\tif (DEV && force_schedule) {\n\t\t\tfor (var fn of /** @type {import('#client').DerivedDebug} */ (derived).inspect) fn();\n\t\t}\n\t}\n}\n\n/**\n * @param {import('#client').Derived} signal\n * @returns {void}\n */\nexport function destroy_derived(signal) {\n\tdestroy_derived_children(signal);\n\tremove_reactions(signal, 0);\n\tset_signal_status(signal, DESTROYED);\n\n\t// TODO we need to ensure we remove the derived from any parent derives\n\n\tsignal.first =\n\t\tsignal.last =\n\t\tsignal.deps =\n\t\tsignal.reactions =\n\t\t// @ts-expect-error `signal.fn` cannot be `null` while the signal is alive\n\t\tsignal.fn =\n\t\t\tnull;\n}\n", "import { snapshot } from '../proxy.js';\nimport { render_effect, validate_effect } from '../reactivity/effects.js';\nimport { current_effect, deep_read, untrack } from '../runtime.js';\nimport { array_prototype, get_prototype_of, object_prototype } from '../utils.js';\n\n/** @type {Function | null} */\nexport let inspect_fn = null;\n\n/** @param {Function | null} fn */\nexport function set_inspect_fn(fn) {\n\tinspect_fn = fn;\n}\n\n/** @type {Array<import('#client').ValueDebug>} */\nexport let inspect_captured_signals = [];\n\n/**\n * @param {() => any[]} get_value\n * @param {Function} [inspector]\n */\n// eslint-disable-next-line no-console\nexport function inspect(get_value, inspector = console.log) {\n\tvalidate_effect(current_effect, '$inspect');\n\n\tlet initial = true;\n\n\t// we assign the function directly to signals, rather than just\n\t// calling `inspector` directly inside the effect, so that\n\t// we get useful stack traces\n\tvar fn = () => {\n\t\tconst value = untrack(() => deep_snapshot(get_value()));\n\t\tinspector(initial ? 'init' : 'update', ...value);\n\t};\n\n\trender_effect(() => {\n\t\tinspect_fn = fn;\n\t\tdeep_read(get_value());\n\t\tinspect_fn = null;\n\n\t\tconst signals = inspect_captured_signals.slice();\n\t\tinspect_captured_signals = [];\n\n\t\tif (initial) {\n\t\t\tfn();\n\t\t\tinitial = false;\n\t\t}\n\n\t\treturn () => {\n\t\t\tfor (const s of signals) {\n\t\t\t\ts.inspect.delete(fn);\n\t\t\t}\n\t\t};\n\t});\n}\n\n/**\n * Like `snapshot`, but recursively traverses into normal arrays/objects to find potential states in them.\n * @param {any} value\n * @param {Map<any, any>} visited\n * @returns {any}\n */\nfunction deep_snapshot(value, visited = new Map()) {\n\tif (typeof value === 'object' && value !== null && !visited.has(value)) {\n\t\tconst unstated = snapshot(value);\n\n\t\tif (unstated !== value) {\n\t\t\tvisited.set(value, unstated);\n\t\t\treturn unstated;\n\t\t}\n\n\t\tconst prototype = get_prototype_of(value);\n\n\t\t// Only deeply snapshot plain objects and arrays\n\t\tif (prototype === object_prototype || prototype === array_prototype) {\n\t\t\tlet contains_unstated = false;\n\t\t\t/** @type {any} */\n\t\t\tconst nested_unstated = Array.isArray(value) ? [] : {};\n\n\t\t\tfor (let key in value) {\n\t\t\t\tconst result = deep_snapshot(value[key], visited);\n\t\t\t\tnested_unstated[key] = result;\n\t\t\t\tif (result !== value[key]) {\n\t\t\t\t\tcontains_unstated = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvisited.set(value, contains_unstated ? nested_unstated : value);\n\t\t} else {\n\t\t\tvisited.set(value, value);\n\t\t}\n\t}\n\n\treturn visited.get(value) ?? value;\n}\n", "import { DEV } from 'esm-env';\nimport { get_descriptors, get_prototype_of, is_frozen, object_freeze } from './utils.js';\nimport { snapshot } from './proxy.js';\nimport { destroy_effect, effect, execute_effect_teardown } from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tRENDER_EFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { add_owner } from './dev/ownership.js';\nimport { mutate, set, source } from './reactivity/sources.js';\nimport { update_derived } from './reactivity/deriveds.js';\nimport { inspect_captured_signals, inspect_fn, set_inspect_fn } from './dev/inspect.js';\nimport * as e from './errors.js';\nimport { lifecycle_outside_component } from '../shared/errors.js';\n\nconst FLUSH_MICROTASK = 0;\nconst FLUSH_SYNC = 1;\n\n// Used for controlling the flush of effects.\nlet current_scheduler_mode = FLUSH_MICROTASK;\n// Used for handling scheduling\nlet is_micro_task_queued = false;\nexport let is_flushing_effect = false;\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_flushing_effect(value) {\n\tis_flushing_effect = value;\n}\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Used for $inspect\nexport let is_batching_effect = false;\nlet is_inspecting_signal = false;\n\n// Handle effect queues\n\n/** @type {import('#client').Effect[]} */\nlet current_queued_root_effects = [];\n\nlet flush_count = 0;\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | import('#client').Reaction} */\nexport let current_reaction = null;\n\n/** @param {null | import('#client').Reaction} reaction */\nexport function set_current_reaction(reaction) {\n\tcurrent_reaction = reaction;\n}\n\n/** @type {null | import('#client').Effect} */\nexport let current_effect = null;\n\n/** @param {null | import('#client').Effect} effect */\nexport function set_current_effect(effect) {\n\tcurrent_effect = effect;\n}\n\n/** @type {null | import('#client').Value[]} */\nexport let current_dependencies = null;\nlet current_dependencies_index = 0;\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | import('#client').Source[]}\n */\nexport let current_untracked_writes = null;\n\n/** @param {null | import('#client').Source[]} value */\nexport function set_current_untracked_writes(value) {\n\tcurrent_untracked_writes = value;\n}\n\n/** @type {null | import('#client').ValueDebug} */\nexport let last_inspected_signal = null;\n\n/** @param {null | import('#client').ValueDebug} signal */\nexport function set_last_inspected_signal(signal) {\n\tlast_inspected_signal = signal;\n}\n\n/** If `true`, `get`ting the signal should not register it as a dependency */\nexport let current_untracking = false;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let current_skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\nexport let is_signals_recorded = false;\nlet captured_signals = new Set();\n\n// Handling runtime component context\n/** @type {import('#client').ComponentContext | null} */\nexport let current_component_context = null;\n\n/** @param {import('#client').ComponentContext | null} context */\nexport function set_current_component_context(context) {\n\tcurrent_component_context = context;\n\tif (DEV) {\n\t\tdev_current_component_function = context?.function;\n\t}\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {import('#client').ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {import('#client').ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn current_component_context !== null && current_component_context.l === null;\n}\n\n/**\n * @param {import('#client').ProxyStateObject} target\n * @param {string | symbol} prop\n * @param {any} receiver\n */\nexport function batch_inspect(target, prop, receiver) {\n\tconst value = Reflect.get(target, prop, receiver);\n\t/**\n\t * @this {any}\n\t */\n\treturn function () {\n\t\tconst previously_batching_effect = is_batching_effect;\n\t\tis_batching_effect = true;\n\t\ttry {\n\t\t\treturn Reflect.apply(value, this, arguments);\n\t\t} finally {\n\t\t\tis_batching_effect = previously_batching_effect;\n\t\t\tif (last_inspected_signal !== null && !is_inspecting_signal) {\n\t\t\t\tis_inspecting_signal = true;\n\t\t\t\ttry {\n\t\t\t\t\tfor (const fn of last_inspected_signal.inspect) {\n\t\t\t\t\t\tfn();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tis_inspecting_signal = false;\n\t\t\t\t}\n\t\t\t\tlast_inspected_signal = null;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {import('#client').Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\tvar is_dirty = (flags & DIRTY) !== 0;\n\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t// If we are unowned, we still need to ensure that we update our version to that\n\t// of our dependencies.\n\tif (is_dirty && !is_unowned) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0 || (is_dirty && is_unowned)) {\n\t\tvar dependencies = reaction.deps;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar length = dependencies.length;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar dependency = dependencies[i];\n\n\t\t\t\tif (!is_dirty && check_dirtiness(/** @type {import('#client').Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {import('#client').Derived} **/ (dependency), true);\n\n\t\t\t\t\t// `signal` might now be dirty, as a result of calling `update_derived`\n\t\t\t\t\tif ((reaction.f & DIRTY) !== 0) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (is_unowned) {\n\t\t\t\t\t// If we're working with an unowned derived signal, then we need to check\n\t\t\t\t\t// if our dependency write version is higher. If it is then we can assume\n\t\t\t\t\t// that state has changed to a newer version and thus this unowned signal\n\t\t\t\t\t// is also dirty.\n\t\t\t\t\tvar version = dependency.version;\n\n\t\t\t\t\tif (version > /** @type {import('#client').Derived} */ (reaction).version) {\n\t\t\t\t\t\t/** @type {import('#client').Derived} */ (reaction).version = version;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!current_skip_reaction && !dependency?.reactions?.includes(reaction)) {\n\t\t\t\t\t\t// If we are working with an unowned signal as part of an effect (due to !current_skip_reaction)\n\t\t\t\t\t\t// and the version hasn't changed, we still need to check that this reaction\n\t\t\t\t\t\t// if linked to the dependency source – otherwise future updates will not be caught.\n\t\t\t\t\t\tvar reactions = dependency.reactions;\n\t\t\t\t\t\tif (reactions === null) {\n\t\t\t\t\t\t\tdependency.reactions = [reaction];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treactions.push(reaction);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals are always maybe dirty, as we instead check their dependency versions.\n\t\tif (!is_unowned) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn is_dirty;\n}\n\n/**\n * @template V\n * @param {import('#client').Reaction} signal\n * @returns {V}\n */\nexport function execute_reaction_fn(signal) {\n\tconst previous_dependencies = current_dependencies;\n\tconst previous_dependencies_index = current_dependencies_index;\n\tconst previous_untracked_writes = current_untracked_writes;\n\tconst previous_reaction = current_reaction;\n\tconst previous_skip_reaction = current_skip_reaction;\n\tconst previous_untracking = current_untracking;\n\n\tcurrent_dependencies = /** @type {null | import('#client').Value[]} */ (null);\n\tcurrent_dependencies_index = 0;\n\tcurrent_untracked_writes = null;\n\tcurrent_reaction = signal;\n\tcurrent_skip_reaction = !is_flushing_effect && (signal.f & UNOWNED) !== 0;\n\tcurrent_untracking = false;\n\n\ttry {\n\t\tlet res = signal.fn();\n\t\tlet dependencies = /** @type {import('#client').Value<unknown>[]} **/ (signal.deps);\n\t\tif (current_dependencies !== null) {\n\t\t\tlet i;\n\t\t\tif (dependencies !== null) {\n\t\t\t\tconst deps_length = dependencies.length;\n\t\t\t\t// Include any dependencies up until the current_dependencies_index.\n\t\t\t\tconst full_current_dependencies =\n\t\t\t\t\tcurrent_dependencies_index === 0\n\t\t\t\t\t\t? current_dependencies\n\t\t\t\t\t\t: dependencies.slice(0, current_dependencies_index).concat(current_dependencies);\n\t\t\t\tconst current_dep_length = full_current_dependencies.length;\n\t\t\t\t// If we have more than 16 elements in the array then use a Set for faster performance\n\t\t\t\t// TODO: evaluate if we should always just use a Set or not here?\n\t\t\t\tconst full_current_dependencies_set =\n\t\t\t\t\tcurrent_dep_length > 16 && deps_length - current_dependencies_index > 1\n\t\t\t\t\t\t? new Set(full_current_dependencies)\n\t\t\t\t\t\t: null;\n\t\t\t\tfor (i = current_dependencies_index; i < deps_length; i++) {\n\t\t\t\t\tconst dependency = dependencies[i];\n\t\t\t\t\tif (\n\t\t\t\t\t\tfull_current_dependencies_set !== null\n\t\t\t\t\t\t\t? !full_current_dependencies_set.has(dependency)\n\t\t\t\t\t\t\t: !full_current_dependencies.includes(dependency)\n\t\t\t\t\t) {\n\t\t\t\t\t\tremove_reaction(signal, dependency);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dependencies !== null && current_dependencies_index > 0) {\n\t\t\t\tdependencies.length = current_dependencies_index + current_dependencies.length;\n\t\t\t\tfor (i = 0; i < current_dependencies.length; i++) {\n\t\t\t\t\tdependencies[current_dependencies_index + i] = current_dependencies[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsignal.deps = /** @type {import('#client').Value<V>[]} **/ (\n\t\t\t\t\tdependencies = current_dependencies\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (!current_skip_reaction) {\n\t\t\t\tfor (i = current_dependencies_index; i < dependencies.length; i++) {\n\t\t\t\t\tconst dependency = dependencies[i];\n\t\t\t\t\tconst reactions = dependency.reactions;\n\n\t\t\t\t\tif (reactions === null) {\n\t\t\t\t\t\tdependency.reactions = [signal];\n\t\t\t\t\t} else if (reactions[reactions.length - 1] !== signal) {\n\t\t\t\t\t\t// TODO: should this be:\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// } else if (!reactions.includes(signal)) {\n\t\t\t\t\t\t//\n\t\t\t\t\t\treactions.push(signal);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (dependencies !== null && current_dependencies_index < dependencies.length) {\n\t\t\tremove_reactions(signal, current_dependencies_index);\n\t\t\tdependencies.length = current_dependencies_index;\n\t\t}\n\t\treturn res;\n\t} finally {\n\t\tcurrent_dependencies = previous_dependencies;\n\t\tcurrent_dependencies_index = previous_dependencies_index;\n\t\tcurrent_untracked_writes = previous_untracked_writes;\n\t\tcurrent_reaction = previous_reaction;\n\t\tcurrent_skip_reaction = previous_skip_reaction;\n\t\tcurrent_untracking = previous_untracking;\n\t}\n}\n\n/**\n * @template V\n * @param {import('#client').Reaction} signal\n * @param {import('#client').Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tconst reactions = dependency.reactions;\n\tlet reactions_length = 0;\n\tif (reactions !== null) {\n\t\treactions_length = reactions.length - 1;\n\t\tconst index = reactions.indexOf(signal);\n\t\tif (index !== -1) {\n\t\t\tif (reactions_length === 0) {\n\t\t\t\tdependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[reactions_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\tif (reactions_length === 0 && (dependency.f & UNOWNED) !== 0) {\n\t\t// If the signal is unowned then we need to make sure to change it to dirty.\n\t\tset_signal_status(dependency, DIRTY);\n\t\tremove_reactions(/** @type {import('#client').Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {import('#client').Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tconst dependencies = signal.deps;\n\tif (dependencies !== null) {\n\t\tconst active_dependencies = start_index === 0 ? null : dependencies.slice(0, start_index);\n\t\tlet i;\n\t\tfor (i = start_index; i < dependencies.length; i++) {\n\t\t\tconst dependency = dependencies[i];\n\t\t\t// Avoid removing a reaction if we know that it is active (start_index will not be 0)\n\t\t\tif (active_dependencies === null || !active_dependencies.includes(dependency)) {\n\t\t\t\tremove_reaction(signal, dependency);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {import('#client').Reaction} signal\n * @returns {void}\n */\nexport function destroy_effect_children(signal) {\n\tlet effect = signal.first;\n\tsignal.first = null;\n\tsignal.last = null;\n\tvar sibling;\n\twhile (effect !== null) {\n\t\tsibling = effect.next;\n\t\tdestroy_effect(effect);\n\t\teffect = sibling;\n\t}\n}\n\n/**\n * @param {import('#client').Effect} effect\n * @returns {void}\n */\nexport function execute_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar component_context = effect.ctx;\n\n\tvar previous_effect = current_effect;\n\tvar previous_component_context = current_component_context;\n\n\tcurrent_effect = effect;\n\tset_current_component_context(component_context);\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) === 0) {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = execute_reaction_fn(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t} finally {\n\t\tcurrent_effect = previous_effect;\n\t\tset_current_component_context(previous_component_context);\n\t}\n}\n\nfunction infinite_loop_guard() {\n\tif (flush_count > 1000) {\n\t\tflush_count = 0;\n\t\te.effect_update_depth_exceeded();\n\t}\n\tflush_count++;\n}\n\n/**\n * @param {Array<import('#client').Effect>} root_effects\n * @returns {void}\n */\nfunction flush_queued_root_effects(root_effects) {\n\tfor (var i = 0; i < root_effects.length; i++) {\n\t\tvar signal = root_effects[i];\n\t\tflush_nested_effects(signal, RENDER_EFFECT | EFFECT);\n\t}\n}\n\n/**\n * @param {Array<import('#client').Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tinfinite_loop_guard();\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0 && check_dirtiness(effect)) {\n\t\t\texecute_effect(effect);\n\t\t}\n\t}\n}\n\nfunction process_microtask() {\n\tis_micro_task_queued = false;\n\tif (flush_count > 101) {\n\t\treturn;\n\t}\n\tconst previous_queued_root_effects = current_queued_root_effects;\n\tcurrent_queued_root_effects = [];\n\tflush_queued_root_effects(previous_queued_root_effects);\n\tif (!is_micro_task_queued) {\n\t\tflush_count = 0;\n\t}\n}\n\n/**\n * @param {import('#client').Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (current_scheduler_mode === FLUSH_MICROTASK) {\n\t\tif (!is_micro_task_queued) {\n\t\t\tis_micro_task_queued = true;\n\t\t\tqueueMicrotask(process_microtask);\n\t\t}\n\t}\n\n\tvar effect = signal;\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & BRANCH_EFFECT) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t}\n\t}\n\n\tcurrent_queued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {import('#client').Effect} effect\n * @param {number} filter_flags\n * @param {boolean} shallow\n * @param {import('#client').Effect[]} collected_effects\n * @returns {void}\n */\nfunction process_effects(effect, filter_flags, shallow, collected_effects) {\n\tvar current_effect = effect.first;\n\tvar effects = [];\n\n\tmain_loop: while (current_effect !== null) {\n\t\tvar flags = current_effect.f;\n\t\t// TODO: we probably don't need to check for destroyed as it shouldn't be encountered?\n\t\tvar is_active = (flags & (DESTROYED | INERT)) === 0;\n\t\tvar is_branch = flags & BRANCH_EFFECT;\n\t\tvar is_clean = (flags & CLEAN) !== 0;\n\t\tvar child = current_effect.first;\n\n\t\t// Skip this branch if it's clean\n\t\tif (is_active && (!is_branch || !is_clean)) {\n\t\t\tif (is_branch) {\n\t\t\t\tset_signal_status(current_effect, CLEAN);\n\t\t\t}\n\n\t\t\tif ((flags & RENDER_EFFECT) !== 0) {\n\t\t\t\tif (is_branch) {\n\t\t\t\t\tif (!shallow && child !== null) {\n\t\t\t\t\t\tcurrent_effect = child;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (check_dirtiness(current_effect)) {\n\t\t\t\t\t\texecute_effect(current_effect);\n\t\t\t\t\t\t// Child might have been mutated since running the effect\n\t\t\t\t\t\tchild = current_effect.first;\n\t\t\t\t\t}\n\t\t\t\t\tif (!shallow && child !== null) {\n\t\t\t\t\t\tcurrent_effect = child;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if ((flags & EFFECT) !== 0) {\n\t\t\t\tif (is_branch || is_clean) {\n\t\t\t\t\tif (!shallow && child !== null) {\n\t\t\t\t\t\tcurrent_effect = child;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\teffects.push(current_effect);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar sibling = current_effect.next;\n\n\t\tif (sibling === null) {\n\t\t\tlet parent = current_effect.parent;\n\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (effect === parent) {\n\t\t\t\t\tbreak main_loop;\n\t\t\t\t}\n\t\t\t\tvar parent_sibling = parent.next;\n\t\t\t\tif (parent_sibling !== null) {\n\t\t\t\t\tcurrent_effect = parent_sibling;\n\t\t\t\t\tcontinue main_loop;\n\t\t\t\t}\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\t\t}\n\n\t\tcurrent_effect = sibling;\n\t}\n\n\tif (effects.length > 0) {\n\t\tif ((filter_flags & EFFECT) !== 0) {\n\t\t\tcollected_effects.push(...effects);\n\t\t}\n\n\t\tif (!shallow) {\n\t\t\tfor (var i = 0; i < effects.length; i++) {\n\t\t\t\tprocess_effects(effects[i], filter_flags, false, collected_effects);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n *\n * This function recursively collects effects in topological order from the starting effect passed in.\n * Effects will be collected when they match the filtered bitwise flag passed in only. The collected\n * array will be populated with all the effects.\n *\n * @param {import('#client').Effect} effect\n * @param {number} filter_flags\n * @param {boolean} [shallow]\n * @returns {void}\n */\nfunction flush_nested_effects(effect, filter_flags, shallow = false) {\n\t/** @type {import('#client').Effect[]} */\n\tvar collected_effects = [];\n\n\tvar previously_flushing_effect = is_flushing_effect;\n\tis_flushing_effect = true;\n\n\ttry {\n\t\t// When working with custom elements, the root effects might not have a root\n\t\tif (effect.first === null && (effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tflush_queued_effects([effect]);\n\t\t} else {\n\t\t\tprocess_effects(effect, filter_flags, shallow, collected_effects);\n\t\t\tflush_queued_effects(collected_effects);\n\t\t}\n\t} finally {\n\t\tis_flushing_effect = previously_flushing_effect;\n\t}\n}\n\n/**\n * @param {import('#client').Effect} effect\n * @returns {void}\n */\nexport function flush_local_render_effects(effect) {\n\t// We are entering a new flush sequence, so ensure counter is reset.\n\tflush_count = 0;\n\tflush_nested_effects(effect, RENDER_EFFECT, true);\n}\n\n/**\n * Internal version of `flushSync` with the option to not flush previous effects.\n * Returns the result of the passed function, if given.\n * @param {() => any} [fn]\n * @param {boolean} [flush_previous]\n * @returns {any}\n */\nexport function flush_sync(fn, flush_previous = true) {\n\tvar previous_scheduler_mode = current_scheduler_mode;\n\tvar previous_queued_root_effects = current_queued_root_effects;\n\n\ttry {\n\t\tinfinite_loop_guard();\n\n\t\t/** @type {import('#client').Effect[]} */\n\t\tconst root_effects = [];\n\n\t\tcurrent_scheduler_mode = FLUSH_SYNC;\n\t\tcurrent_queued_root_effects = root_effects;\n\n\t\tif (flush_previous) {\n\t\t\tflush_queued_root_effects(previous_queued_root_effects);\n\t\t}\n\n\t\tvar result = fn?.();\n\n\t\tflush_tasks();\n\t\tif (current_queued_root_effects.length > 0 || root_effects.length > 0) {\n\t\t\tflush_sync();\n\t\t}\n\n\t\tflush_count = 0;\n\n\t\treturn result;\n\t} finally {\n\t\tcurrent_scheduler_mode = previous_scheduler_mode;\n\t\tcurrent_queued_root_effects = previous_queued_root_effects;\n\t}\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flush_sync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflush_sync();\n}\n\n/**\n * @template V\n * @param {import('#client').Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tif (DEV && inspect_fn) {\n\t\tvar s = /** @type {import('#client').ValueDebug} */ (signal);\n\t\ts.inspect.add(inspect_fn);\n\t\tinspect_captured_signals.push(s);\n\t}\n\n\tconst flags = signal.f;\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn signal.v;\n\t}\n\n\tif (is_signals_recorded) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (\n\t\tcurrent_reaction !== null &&\n\t\t(current_reaction.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 &&\n\t\t!current_untracking\n\t) {\n\t\tconst unowned = (current_reaction.f & UNOWNED) !== 0;\n\t\tconst dependencies = current_reaction.deps;\n\t\tif (\n\t\t\tcurrent_dependencies === null &&\n\t\t\tdependencies !== null &&\n\t\t\tdependencies[current_dependencies_index] === signal &&\n\t\t\t!(unowned && current_effect !== null)\n\t\t) {\n\t\t\tcurrent_dependencies_index++;\n\t\t} else if (\n\t\t\tdependencies === null ||\n\t\t\tcurrent_dependencies_index === 0 ||\n\t\t\tdependencies[current_dependencies_index - 1] !== signal\n\t\t) {\n\t\t\tif (current_dependencies === null) {\n\t\t\t\tcurrent_dependencies = [signal];\n\t\t\t} else {\n\t\t\t\tcurrent_dependencies.push(signal);\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tcurrent_untracked_writes !== null &&\n\t\t\tcurrent_effect !== null &&\n\t\t\t(current_effect.f & CLEAN) !== 0 &&\n\t\t\t(current_effect.f & BRANCH_EFFECT) === 0 &&\n\t\t\tcurrent_untracked_writes.includes(signal)\n\t\t) {\n\t\t\tset_signal_status(current_effect, DIRTY);\n\t\t\tschedule_effect(current_effect);\n\t\t}\n\t}\n\n\tif (\n\t\t(flags & DERIVED) !== 0 &&\n\t\tcheck_dirtiness(/** @type {import('#client').Derived} */ (signal))\n\t) {\n\t\tif (DEV) {\n\t\t\t// we want to avoid tracking indirect dependencies\n\t\t\tconst previous_inspect_fn = inspect_fn;\n\t\t\tset_inspect_fn(null);\n\t\t\tupdate_derived(/** @type {import('#client').Derived} **/ (signal), false);\n\t\t\tset_inspect_fn(previous_inspect_fn);\n\t\t} else {\n\t\t\tupdate_derived(/** @type {import('#client').Derived} **/ (signal), false);\n\t\t}\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar previous_is_signals_recorded = is_signals_recorded;\n\tvar previous_captured_signals = captured_signals;\n\tis_signals_recorded = true;\n\tcaptured_signals = new Set();\n\tvar captured = captured_signals;\n\tvar signal;\n\ttry {\n\t\tuntrack(fn);\n\t} finally {\n\t\tis_signals_recorded = previous_is_signals_recorded;\n\t\tif (is_signals_recorded) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\tfor (signal of captured) {\n\t\tmutate(signal, null /* doesnt matter */);\n\t}\n}\n\n/**\n * @param {import('#client').Value} signal\n * @param {number} to_status should be DIRTY or MAYBE_DIRTY\n * @param {boolean} force_schedule\n * @returns {void}\n */\nexport function mark_reactions(signal, to_status, force_schedule) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// We skip any effects that are already dirty. Additionally, we also\n\t\t// skip if the reaction is the same as the current effect (except if we're not in runes or we\n\t\t// are in force schedule mode).\n\t\tif ((flags & DIRTY) !== 0 || ((!force_schedule || !runes) && reaction === current_effect)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, to_status);\n\n\t\t// If the signal is not clean, then skip over it – with the exception of unowned signals that\n\t\t// are already maybe dirty. Unowned signals might be dirty because they are not captured as part of an\n\t\t// effect.\n\t\tvar maybe_dirty = (flags & MAYBE_DIRTY) !== 0;\n\t\tvar unowned = (flags & UNOWNED) !== 0;\n\n\t\tif ((flags & CLEAN) !== 0 || (maybe_dirty && unowned)) {\n\t\t\tif ((reaction.f & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(\n\t\t\t\t\t/** @type {import('#client').Derived} */ (reaction),\n\t\t\t\t\tMAYBE_DIRTY,\n\t\t\t\t\tforce_schedule\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {import('#client').Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Use `untrack` to prevent something from being treated as an `$effect`/`$derived` dependency.\n *\n * https://svelte-5-preview.vercel.app/docs/functions#untrack\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tconst previous_untracking = current_untracking;\n\ttry {\n\t\tcurrent_untracking = true;\n\t\treturn fn();\n\t} finally {\n\t\tcurrent_untracking = previous_untracking;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {import('#client').Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * @template V\n * @param {V | import('#client').Value<V>} val\n * @returns {val is import('#client').Value<V>}\n */\nexport function is_signal(val) {\n\treturn (\n\t\ttypeof val === 'object' &&\n\t\tval !== null &&\n\t\ttypeof (/** @type {import('#client').Value<V>} */ (val).f) === 'number'\n\t);\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\n\tif (DEV) {\n\t\tconst fn = /** @type {import('#client').ComponentContext} */ (current_component_context)\n\t\t\t.function;\n\t\tif (fn) {\n\t\t\tadd_owner(result, fn, true);\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\n\tif (DEV) {\n\t\tconst fn = current_component_context?.function;\n\t\tif (fn) {\n\t\t\tfor (const value of context_map.values()) {\n\t\t\t\tadd_owner(value, fn, true);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (current_component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (current_component_context.c ??= new Map(\n\t\tget_parent_context(current_component_context) || undefined\n\t));\n}\n\n/**\n * @param {import('#client').ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n\n/**\n * @param {import('#client').Value<number>} signal\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update(signal, d = 1) {\n\tconst value = get(signal);\n\tset(signal, value + d);\n\treturn value;\n}\n\n/**\n * @param {import('#client').Value<number>} signal\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre(signal, d = 1) {\n\tconst value = get(signal) + d;\n\tset(signal, value);\n\treturn value;\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\tobj = { ...obj };\n\tlet key;\n\tfor (key of keys) {\n\t\tdelete obj[key];\n\t}\n\treturn obj;\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {() => V} fallback lazy because could contain side effects\n * @returns {V}\n */\nexport function value_or_fallback(value, fallback) {\n\treturn value === undefined ? fallback() : value;\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {() => Promise<V>} fallback lazy because could contain side effects\n * @returns {Promise<V>}\n */\nexport async function value_or_fallback_async(value, fallback) {\n\treturn value === undefined ? fallback() : value;\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tcurrent_component_context = {\n\t\tp: current_component_context,\n\t\tc: null,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t};\n\n\tif (!runes) {\n\t\tcurrent_component_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tif (DEV) {\n\t\t// component function\n\t\tcurrent_component_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = current_component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst effects = context_stack_item.e;\n\t\tif (effects !== null) {\n\t\t\tcontext_stack_item.e = null;\n\t\t\tfor (let i = 0; i < effects.length; i++) {\n\t\t\t\teffect(effects[i]);\n\t\t\t}\n\t\t}\n\t\tset_current_component_context(context_stack_item.p);\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @template V\n * @param {V | import('#client').Value<V>} value\n * @returns {V}\n */\nexport function unwrap(value) {\n\tif (is_signal(value)) {\n\t\t// @ts-ignore\n\t\treturn get(value);\n\t}\n\t// @ts-ignore\n\treturn value;\n}\n\nif (DEV) {\n\t/**\n\t * @param {string} rune\n\t */\n\tfunction throw_rune_error(rune) {\n\t\tif (!(rune in globalThis)) {\n\t\t\t// TODO if people start adjusting the \"this can contain runes\" config through v-p-s more, adjust this message\n\t\t\t/** @type {any} */\n\t\t\tlet value; // let's hope noone modifies this global, but belts and braces\n\t\t\tObject.defineProperty(globalThis, rune, {\n\t\t\t\tconfigurable: true,\n\t\t\t\t// eslint-disable-next-line getter-return\n\t\t\t\tget: () => {\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\n\t\t\t\t\te.rune_outside_svelte(rune);\n\t\t\t\t},\n\t\t\t\tset: (v) => {\n\t\t\t\t\tvalue = v;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tthrow_rune_error('$state');\n\tthrow_rune_error('$effect');\n\tthrow_rune_error('$derived');\n\tthrow_rune_error('$inspect');\n\tthrow_rune_error('$props');\n\tthrow_rune_error('$bindable');\n}\n\n/**\n * Expects a value that was wrapped with `freeze` and makes it frozen.\n * @template T\n * @param {T} value\n * @returns {Readonly<T>}\n */\nexport function freeze(value) {\n\tif (typeof value === 'object' && value != null && !is_frozen(value)) {\n\t\t// If the object is already proxified, then snapshot the value\n\t\tif (STATE_SYMBOL in value) {\n\t\t\treturn object_freeze(snapshot(value));\n\t\t}\n\t\t// Otherwise freeze the object\n\t\tobject_freeze(value);\n\t}\n\treturn value;\n}\n", "import { DEV } from 'esm-env';\nimport {\n\tget,\n\tbatch_inspect,\n\tcurrent_component_context,\n\tuntrack,\n\tcurrent_effect\n} from './runtime.js';\nimport {\n\tarray_prototype,\n\tdefine_property,\n\tget_descriptor,\n\tget_descriptors,\n\tget_prototype_of,\n\tis_array,\n\tis_frozen,\n\tobject_prototype\n} from './utils.js';\nimport { check_ownership, widen_ownership } from './dev/ownership.js';\nimport { mutable_source, source, set } from './reactivity/sources.js';\nimport { STATE_SYMBOL } from './constants.js';\nimport { UNINITIALIZED } from '../../constants.js';\nimport * as e from './errors.js';\n\n/**\n * @template T\n * @param {T} value\n * @param {boolean} [immutable]\n * @param {import('#client').ProxyMetadata | null} [parent]\n * @returns {import('#client').ProxyStateObject<T> | T}\n */\nexport function proxy(value, immutable = true, parent = null) {\n\tif (typeof value === 'object' && value != null && !is_frozen(value)) {\n\t\t// If we have an existing proxy, return it...\n\t\tif (STATE_SYMBOL in value) {\n\t\t\tconst metadata = /** @type {import('#client').ProxyMetadata<T>} */ (value[STATE_SYMBOL]);\n\n\t\t\t// ...unless the proxy belonged to a different object, because\n\t\t\t// someone copied the state symbol using `Reflect.ownKeys(...)`\n\t\t\tif (metadata.t === value || metadata.p === value) {\n\t\t\t\tif (DEV) {\n\t\t\t\t\t// Since original parent relationship gets lost, we need to copy over ancestor owners\n\t\t\t\t\t// into current metadata. The object might still exist on both, so we need to widen it.\n\t\t\t\t\twiden_ownership(metadata, metadata);\n\t\t\t\t\tmetadata.parent = parent;\n\t\t\t\t}\n\n\t\t\t\treturn metadata.p;\n\t\t\t}\n\t\t}\n\n\t\tconst prototype = get_prototype_of(value);\n\n\t\tif (prototype === object_prototype || prototype === array_prototype) {\n\t\t\tconst proxy = new Proxy(value, state_proxy_handler);\n\n\t\t\tdefine_property(value, STATE_SYMBOL, {\n\t\t\t\tvalue: /** @type {import('#client').ProxyMetadata} */ ({\n\t\t\t\t\ts: new Map(),\n\t\t\t\t\tv: source(0),\n\t\t\t\t\ta: is_array(value),\n\t\t\t\t\ti: immutable,\n\t\t\t\t\tp: proxy,\n\t\t\t\t\tt: value\n\t\t\t\t}),\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false\n\t\t\t});\n\n\t\t\tif (DEV) {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvalue[STATE_SYMBOL].parent = parent;\n\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvalue[STATE_SYMBOL].owners =\n\t\t\t\t\tparent === null\n\t\t\t\t\t\t? current_component_context !== null\n\t\t\t\t\t\t\t? new Set([current_component_context.function])\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t: new Set();\n\t\t\t}\n\n\t\t\treturn proxy;\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @template {import('#client').ProxyStateObject} T\n * @param {T} value\n * @param {Map<T, Record<string | symbol, any>>} already_unwrapped\n * @returns {Record<string | symbol, any>}\n */\nfunction unwrap(value, already_unwrapped) {\n\tif (typeof value === 'object' && value != null && STATE_SYMBOL in value) {\n\t\tconst unwrapped = already_unwrapped.get(value);\n\t\tif (unwrapped !== undefined) {\n\t\t\treturn unwrapped;\n\t\t}\n\n\t\tif (is_array(value)) {\n\t\t\t/** @type {Record<string | symbol, any>} */\n\t\t\tconst array = [];\n\t\t\talready_unwrapped.set(value, array);\n\t\t\tfor (const element of value) {\n\t\t\t\tarray.push(unwrap(element, already_unwrapped));\n\t\t\t}\n\t\t\treturn array;\n\t\t} else {\n\t\t\t/** @type {Record<string | symbol, any>} */\n\t\t\tconst obj = {};\n\t\t\tconst keys = Reflect.ownKeys(value);\n\t\t\tconst descriptors = get_descriptors(value);\n\t\t\talready_unwrapped.set(value, obj);\n\n\t\t\tfor (const key of keys) {\n\t\t\t\tif (key === STATE_SYMBOL) continue;\n\t\t\t\tif (descriptors[key].get) {\n\t\t\t\t\tdefine_property(obj, key, descriptors[key]);\n\t\t\t\t} else {\n\t\t\t\t\t/** @type {T} */\n\t\t\t\t\tconst property = value[key];\n\t\t\t\t\tobj[key] = unwrap(property, already_unwrapped);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn obj;\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @template T\n * @param {T} value\n * @returns {T}\n */\nexport function snapshot(value) {\n\treturn /** @type {T} */ (\n\t\tunwrap(/** @type {import('#client').ProxyStateObject} */ (value), new Map())\n\t);\n}\n\n/**\n * @param {import('#client').Source<number>} signal\n * @param {1 | -1} [d]\n */\nfunction update_version(signal, d = 1) {\n\tset(signal, signal.v + d);\n}\n\n/** @type {ProxyHandler<import('#client').ProxyStateObject<any>>} */\nconst state_proxy_handler = {\n\tdefineProperty(target, prop, descriptor) {\n\t\tif (descriptor.value) {\n\t\t\t/** @type {import('#client').ProxyMetadata} */\n\t\t\tconst metadata = target[STATE_SYMBOL];\n\n\t\t\tconst s = metadata.s.get(prop);\n\t\t\tif (s !== undefined) set(s, proxy(descriptor.value, metadata.i, metadata));\n\t\t}\n\n\t\treturn Reflect.defineProperty(target, prop, descriptor);\n\t},\n\n\tdeleteProperty(target, prop) {\n\t\t/** @type {import('#client').ProxyMetadata} */\n\t\tconst metadata = target[STATE_SYMBOL];\n\t\tconst s = metadata.s.get(prop);\n\t\tconst is_array = metadata.a;\n\t\tconst boolean = delete target[prop];\n\n\t\t// If we have mutated an array directly, and the deletion\n\t\t// was successful we will also need to update the length\n\t\t// before updating the field or the version. This is to\n\t\t// ensure any effects observing length can execute before\n\t\t// effects that listen to the fields – otherwise they will\n\t\t// operate an an index that no longer exists.\n\t\tif (is_array && boolean) {\n\t\t\tconst ls = metadata.s.get('length');\n\t\t\tconst length = target.length - 1;\n\t\t\tif (ls !== undefined && ls.v !== length) {\n\t\t\t\tset(ls, length);\n\t\t\t}\n\t\t}\n\t\tif (s !== undefined) set(s, UNINITIALIZED);\n\n\t\tif (boolean) {\n\t\t\tupdate_version(metadata.v);\n\t\t}\n\n\t\treturn boolean;\n\t},\n\n\tget(target, prop, receiver) {\n\t\tif (prop === STATE_SYMBOL) {\n\t\t\treturn Reflect.get(target, STATE_SYMBOL);\n\t\t}\n\n\t\t/** @type {import('#client').ProxyMetadata} */\n\t\tconst metadata = target[STATE_SYMBOL];\n\t\tlet s = metadata.s.get(prop);\n\n\t\t// create a source, but only if it's an own property and not a prototype property\n\t\tif (s === undefined && (!(prop in target) || get_descriptor(target, prop)?.writable)) {\n\t\t\ts = (metadata.i ? source : mutable_source)(proxy(target[prop], metadata.i, metadata));\n\t\t\tmetadata.s.set(prop, s);\n\t\t}\n\n\t\tif (s !== undefined) {\n\t\t\tconst value = get(s);\n\t\t\treturn value === UNINITIALIZED ? undefined : value;\n\t\t}\n\n\t\tif (DEV) {\n\t\t\tif (typeof target[prop] === 'function' && prop !== Symbol.iterator) {\n\t\t\t\treturn batch_inspect(target, prop, receiver);\n\t\t\t}\n\t\t}\n\t\treturn Reflect.get(target, prop, receiver);\n\t},\n\n\tgetOwnPropertyDescriptor(target, prop) {\n\t\tconst descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\t\tif (descriptor && 'value' in descriptor) {\n\t\t\t/** @type {import('#client').ProxyMetadata} */\n\t\t\tconst metadata = target[STATE_SYMBOL];\n\t\t\tconst s = metadata.s.get(prop);\n\n\t\t\tif (s) {\n\t\t\t\tdescriptor.value = get(s);\n\t\t\t}\n\t\t}\n\n\t\treturn descriptor;\n\t},\n\n\thas(target, prop) {\n\t\tif (prop === STATE_SYMBOL) {\n\t\t\treturn true;\n\t\t}\n\t\t/** @type {import('#client').ProxyMetadata} */\n\t\tconst metadata = target[STATE_SYMBOL];\n\t\tconst has = Reflect.has(target, prop);\n\n\t\tlet s = metadata.s.get(prop);\n\t\tif (\n\t\t\ts !== undefined ||\n\t\t\t(current_effect !== null && (!has || get_descriptor(target, prop)?.writable))\n\t\t) {\n\t\t\tif (s === undefined) {\n\t\t\t\ts = (metadata.i ? source : mutable_source)(\n\t\t\t\t\thas ? proxy(target[prop], metadata.i, metadata) : UNINITIALIZED\n\t\t\t\t);\n\t\t\t\tmetadata.s.set(prop, s);\n\t\t\t}\n\t\t\tconst value = get(s);\n\t\t\tif (value === UNINITIALIZED) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn has;\n\t},\n\n\tset(target, prop, value, receiver) {\n\t\t/** @type {import('#client').ProxyMetadata} */\n\t\tconst metadata = target[STATE_SYMBOL];\n\t\tlet s = metadata.s.get(prop);\n\t\t// If we haven't yet created a source for this property, we need to ensure\n\t\t// we do so otherwise if we read it later, then the write won't be tracked and\n\t\t// the heuristics of effects will be different vs if we had read the proxied\n\t\t// object property before writing to that property.\n\t\tif (s === undefined) {\n\t\t\t// the read creates a signal\n\t\t\tuntrack(() => receiver[prop]);\n\t\t\ts = metadata.s.get(prop);\n\t\t}\n\t\tif (s !== undefined) {\n\t\t\tset(s, proxy(value, metadata.i, metadata));\n\t\t}\n\t\tconst is_array = metadata.a;\n\t\tconst not_has = !(prop in target);\n\n\t\tif (DEV) {\n\t\t\t/** @type {import('#client').ProxyMetadata | undefined} */\n\t\t\tconst prop_metadata = value?.[STATE_SYMBOL];\n\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t}\n\t\t\tcheck_ownership(metadata);\n\t\t}\n\n\t\t// variable.length = value -> clear all signals with index >= value\n\t\tif (is_array && prop === 'length') {\n\t\t\tfor (let i = value; i < target.length; i += 1) {\n\t\t\t\tconst s = metadata.s.get(i + '');\n\t\t\t\tif (s !== undefined) set(s, UNINITIALIZED);\n\t\t\t}\n\t\t}\n\n\t\t// Set the new value before updating any signals so that any listeners get the new value\n\t\t// @ts-ignore\n\t\ttarget[prop] = value;\n\n\t\tif (not_has) {\n\t\t\t// If we have mutated an array directly, we might need to\n\t\t\t// signal that length has also changed. Do it before updating metadata\n\t\t\t// to ensure that iterating over the array as a result of a metadata update\n\t\t\t// will not cause the length to be out of sync.\n\t\t\tif (is_array) {\n\t\t\t\tconst ls = metadata.s.get('length');\n\t\t\t\tconst length = target.length;\n\t\t\t\tif (ls !== undefined && ls.v !== length) {\n\t\t\t\t\tset(ls, length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tupdate_version(metadata.v);\n\t\t}\n\n\t\treturn true;\n\t},\n\n\townKeys(target) {\n\t\t/** @type {import('#client').ProxyMetadata} */\n\t\tconst metadata = target[STATE_SYMBOL];\n\n\t\tget(metadata.v);\n\t\treturn Reflect.ownKeys(target);\n\t}\n};\n\nif (DEV) {\n\tstate_proxy_handler.setPrototypeOf = () => {\n\t\te.state_prototype_fixed();\n\t};\n}\n", "import { HYDRATION_END, HYDRATION_START } from '../../../constants.js';\nimport * as e from '../errors.js';\n\n/**\n * Use this variable to guard everything related to hydration code so it can be treeshaken out\n * if the user doesn't use the `hydrate` method and these code paths are therefore not needed.\n */\nexport let hydrating = false;\n\n/** @param {boolean} value */\nexport function set_hydrating(value) {\n\thydrating = value;\n}\n\n/**\n * Array of nodes to traverse for hydration. This will be null if we're not hydrating, but for\n * the sake of simplicity we're not going to use `null` checks everywhere and instead rely on\n * the `hydrating` flag to tell whether or not we're in hydration mode at which point this is set.\n * @type {import('#client').TemplateNode[]}\n */\nexport let hydrate_nodes = /** @type {any} */ (null);\n\n/** @param {import('#client').TemplateNode[]} nodes */\nexport function set_hydrate_nodes(nodes) {\n\thydrate_nodes = nodes;\n}\n\n/**\n * This function is only called when `hydrating` is true. If passed a `<!--[-->` opening\n * hydration marker, it finds the corresponding closing marker and sets `hydrate_nodes`\n * to everything between the markers, before returning the closing marker.\n * @param {Node} node\n * @returns {Node}\n */\nexport function hydrate_anchor(node) {\n\tif (node.nodeType !== 8) {\n\t\treturn node;\n\t}\n\n\tvar current = /** @type {Node | null} */ (node);\n\n\t// TODO this could have false positives, if a user comment consisted of `[`. need to tighten that up\n\tif (/** @type {Comment} */ (current)?.data !== HYDRATION_START) {\n\t\treturn node;\n\t}\n\n\t/** @type {Node[]} */\n\tvar nodes = [];\n\tvar depth = 0;\n\n\twhile ((current = /** @type {Node} */ (current).nextSibling) !== null) {\n\t\tif (current.nodeType === 8) {\n\t\t\tvar data = /** @type {Comment} */ (current).data;\n\n\t\t\tif (data === HYDRATION_START) {\n\t\t\t\tdepth += 1;\n\t\t\t} else if (data[0] === HYDRATION_END) {\n\t\t\t\tif (depth === 0) {\n\t\t\t\t\thydrate_nodes = /** @type {import('#client').TemplateNode[]} */ (nodes);\n\t\t\t\t\treturn current;\n\t\t\t\t}\n\n\t\t\t\tdepth -= 1;\n\t\t\t}\n\t\t}\n\n\t\tnodes.push(current);\n\t}\n\n\te.hydration_missing_marker_close();\n}\n", "import { hydrate_anchor, hydrate_nodes, hydrating } from './hydration.js';\nimport { get_descriptor } from '../utils.js';\n\n// We cache the Node and Element prototype methods, so that we can avoid doing\n// expensive prototype chain lookups.\n\n/** @type {Node} */\nvar node_prototype;\n\n/** @type {Element} */\nvar element_prototype;\n\n/** @type {Text} */\nvar text_prototype;\n\n/** @type {typeof Node.prototype.appendChild} */\nvar append_child_method;\n\n/** @type {typeof Node.prototype.cloneNode} */\nvar clone_node_method;\n\n/** @type {(this: Node) => ChildNode | null} */\nvar first_child_get;\n\n/** @type {(this: Node) => ChildNode | null} */\nvar next_sibling_get;\n\n/** @type {(this: Node, text: string ) => void} */\nvar text_content_set;\n\n/** @type {(this: Element, class_name: string) => void} */\nvar class_name_set;\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/**\n * @type {Window}\n */\nexport var $window;\n/**\n * @type {Document}\n */\nexport var $document;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif (node_prototype !== undefined) {\n\t\treturn;\n\t}\n\n\tnode_prototype = Node.prototype;\n\telement_prototype = Element.prototype;\n\ttext_prototype = Text.prototype;\n\n\tappend_child_method = node_prototype.appendChild;\n\tclone_node_method = node_prototype.cloneNode;\n\n\t$window = window;\n\t$document = document;\n\n\t// the following assignments improve perf of lookups on DOM nodes\n\t// @ts-expect-error\n\telement_prototype.__click = undefined;\n\t// @ts-expect-error\n\ttext_prototype.__nodeValue = ' ';\n\t// @ts-expect-error\n\telement_prototype.__className = '';\n\t// @ts-expect-error\n\telement_prototype.__attributes = null;\n\n\tfirst_child_get = /** @type {(this: Node) => ChildNode | null} */ (\n\t\t// @ts-ignore\n\t\tget_descriptor(node_prototype, 'firstChild').get\n\t);\n\n\tnext_sibling_get = /** @type {(this: Node) => ChildNode | null} */ (\n\t\t// @ts-ignore\n\t\tget_descriptor(node_prototype, 'nextSibling').get\n\t);\n\n\ttext_content_set = /** @type {(this: Node, text: string ) => void} */ (\n\t\t// @ts-ignore\n\t\tget_descriptor(node_prototype, 'textContent').set\n\t);\n\n\tclass_name_set = /** @type {(this: Element, class_name: string) => void} */ (\n\t\t// @ts-ignore\n\t\tget_descriptor(element_prototype, 'className').set\n\t);\n}\n\n/**\n * @template {Element} E\n * @template {Node} T\n * @param {E} element\n * @param {T} child\n */\nexport function append_child(element, child) {\n\tappend_child_method.call(element, child);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @param {boolean} deep\n * @returns {N}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function clone_node(node, deep) {\n\treturn /** @type {N} */ (clone_node_method.call(node, deep));\n}\n\n/** @returns {Text} */\nexport function empty() {\n\treturn document.createTextNode('');\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function child(node) {\n\tconst child = first_child_get.call(node);\n\tif (!hydrating) return child;\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\treturn node.appendChild(empty());\n\t}\n\n\treturn hydrate_anchor(child);\n}\n\n/**\n * @param {DocumentFragment | import('#client').TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\treturn first_child_get.call(/** @type {DocumentFragment} */ (fragment));\n\t}\n\n\t// when we _are_ hydrating, `fragment` is an array of nodes\n\tconst first_node = /** @type {import('#client').TemplateNode[]} */ (fragment)[0];\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && first_node?.nodeType !== 3) {\n\t\tconst text = empty();\n\t\thydrate_nodes.unshift(text);\n\t\tfirst_node?.before(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_anchor(first_node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function sibling(node, is_text = false) {\n\tconst next_sibling = next_sibling_get.call(node);\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && next_sibling?.nodeType !== 3) {\n\t\tconst text = empty();\n\t\tif (next_sibling) {\n\t\t\tconst index = hydrate_nodes.indexOf(/** @type {Text | Comment | Element} */ (next_sibling));\n\t\t\thydrate_nodes.splice(index, 0, text);\n\t\t\tnext_sibling.before(text);\n\t\t} else {\n\t\t\thydrate_nodes.push(text);\n\t\t}\n\n\t\treturn text;\n\t}\n\n\treturn hydrate_anchor(/** @type {Node} */ (next_sibling));\n}\n\n/**\n * @template {Element} N\n * @param {N} node\n * @param {string} class_name\n * @returns {void}\n */\nexport function set_class_name(node, class_name) {\n\tclass_name_set.call(node, class_name);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\ttext_content_set.call(node, '');\n}\n\n/** @param {string} name */\n/*#__NO_SIDE_EFFECTS__*/\nexport function create_element(name) {\n\treturn document.createElement(name);\n}\n", "import { render_effect } from '../../reactivity/effects.js';\nimport { all_registered_events, root_event_handles } from '../../render.js';\nimport { define_property, is_array } from '../../utils.js';\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} handler\n * @param {boolean} capture\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\treturn handler.call(this, event);\n\t\t}\n\t}\n\n\tdom.addEventListener(event_name, target_handler, options);\n\n\t// @ts-ignore\n\tif (dom === document.body || dom === window || dom === document) {\n\t\trender_effect(() => {\n\t\t\treturn () => {\n\t\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t\t};\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @param {Node} handler_element\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(handler_element, event) {\n\tvar owner_document = handler_element.ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\tif (event.target !== current_target) {\n\t\tdefine_property(event, 'target', {\n\t\t\tconfigurable: true,\n\t\t\tvalue: current_target\n\t\t});\n\t}\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\t// +1 because at_idx is the element which was already handled, and there can only be one delegated event per element.\n\t\t\t// Avoids on:click and onclick on the same event resulting in onclick being fired twice.\n\t\t\tpath_idx = at_idx + 1;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\t/** @param {Element} next_target */\n\tfunction next(next_target) {\n\t\tcurrent_target = next_target;\n\t\t/** @type {null | Element} */\n\t\tvar parent_element = next_target.parentNode || /** @type {any} */ (next_target).host || null;\n\n\t\ttry {\n\t\t\t// @ts-expect-error\n\t\t\tvar delegated = next_target['__' + event_name];\n\n\t\t\tif (delegated !== undefined && !(/** @type {any} */ (next_target).disabled)) {\n\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\tfn.apply(next_target, [event, ...data]);\n\t\t\t\t} else {\n\t\t\t\t\tdelegated.call(next_target, event);\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tif (\n\t\t\t\t!event.cancelBubble &&\n\t\t\t\tparent_element !== handler_element &&\n\t\t\t\tparent_element !== null &&\n\t\t\t\tnext_target !== handler_element\n\t\t\t) {\n\t\t\t\tnext(parent_element);\n\t\t\t}\n\t\t}\n\t}\n\n\ttry {\n\t\tnext(current_target);\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-expect-error is used above\n\t\tcurrent_target = handler_element;\n\t}\n}\n", "import { hydrate_anchor, hydrate_nodes, hydrating, set_hydrate_nodes } from '../hydration.js';\nimport { empty } from '../operations.js';\nimport { block } from '../../reactivity/effects.js';\nimport { HYDRATION_END, HYDRATION_START } from '../../../../constants.js';\n\n/**\n * @type {Node | undefined}\n */\nlet head_anchor;\n\nexport function reset_head_anchor() {\n\thead_anchor = undefined;\n}\n\n/**\n * @param {(anchor: Node) => import('#client').Dom | void} render_fn\n * @returns {void}\n */\nexport function head(render_fn) {\n\t// The head function may be called after the first hydration pass and ssr comment nodes may still be present,\n\t// therefore we need to skip that when we detect that we're not in hydration mode.\n\tlet previous_hydrate_nodes = null;\n\tlet was_hydrating = hydrating;\n\n\t/** @type {Comment | Text} */\n\tvar anchor;\n\n\tif (hydrating) {\n\t\tprevious_hydrate_nodes = hydrate_nodes;\n\n\t\t// There might be multiple head blocks in our app, so we need to account for each one needing independent hydration.\n\t\tif (head_anchor === undefined) {\n\t\t\thead_anchor = /** @type {import('#client').TemplateNode} */ (document.head.firstChild);\n\t\t}\n\n\t\twhile (\n\t\t\thead_anchor.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (head_anchor).data !== HYDRATION_START\n\t\t) {\n\t\t\thead_anchor = /** @type {import('#client').TemplateNode} */ (head_anchor.nextSibling);\n\t\t}\n\n\t\thead_anchor = /** @type {import('#client').TemplateNode} */ (hydrate_anchor(head_anchor));\n\t\thead_anchor = /** @type {import('#client').TemplateNode} */ (head_anchor.nextSibling);\n\t} else {\n\t\tanchor = document.head.appendChild(empty());\n\t}\n\n\ttry {\n\t\tblock(() => render_fn(anchor));\n\t} finally {\n\t\tif (was_hydrating) {\n\t\t\tset_hydrate_nodes(/** @type {import('#client').TemplateNode[]} */ (previous_hydrate_nodes));\n\t\t}\n\t}\n}\n", "import { DEV } from 'esm-env';\nimport {\n\tappend_child,\n\tclear_text_content,\n\tcreate_element,\n\tempty,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_START, PassiveDelegatedEvents } from '../../constants.js';\nimport { flush_sync, push, pop, current_component_context } from './runtime.js';\nimport { effect_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_anchor,\n\thydrate_nodes,\n\thydrating,\n\tset_hydrate_nodes,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from './utils.js';\nimport { handle_event_propagation } from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { validate_component } from '../shared/validate.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * This is normally true — block effects should run their intro transitions —\n * but is false during hydration and mounting (unless `options.intro` is `true`)\n * and when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} dom\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(dom, value) {\n\t// @ts-expect-error need to add __value to patched prototype\n\tconst prev_node_value = dom.__nodeValue;\n\tconst next_node_value = stringify(value);\n\tif (hydrating && dom.nodeValue === next_node_value) {\n\t\t// In case of hydration don't reset the nodeValue as it's already correct.\n\t\t// @ts-expect-error need to add __nodeValue to patched prototype\n\t\tdom.__nodeValue = next_node_value;\n\t} else if (prev_node_value !== next_node_value) {\n\t\tdom.nodeValue = next_node_value;\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__nodeValue = next_node_value;\n\t}\n}\n\n/**\n * @param {Comment} anchor\n * @param {void | ((anchor: Comment, slot_props: Record<string, unknown>) => void)} slot_fn\n * @param {Record<string, unknown>} slot_props\n * @param {null | ((anchor: Comment) => void)} fallback_fn\n */\nexport function slot(anchor, slot_fn, slot_props, fallback_fn) {\n\tif (slot_fn === undefined) {\n\t\tif (fallback_fn !== null) {\n\t\t\tfallback_fn(anchor);\n\t\t}\n\t} else {\n\t\tslot_fn(anchor, slot_props);\n\t}\n}\n\n/**\n * @param {unknown} value\n * @returns {string}\n */\nexport function stringify(value) {\n\treturn typeof value === 'string' ? value : value == null ? '' : value + '';\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @param {import('../../index.js').ComponentType<import('../../index.js').SvelteComponent<Props, Events>>} component\n * @param {{\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tanchor?: Node;\n * \t\tprops?: Props;\n * \t\tevents?: { [Property in keyof Events]: (e: Events[Property]) => any };\n * \t\tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\tif (DEV) {\n\t\tvalidate_component(component);\n\t}\n\n\tconst anchor = options.anchor ?? options.target.appendChild(empty());\n\t// Don't flush previous effects to ensure order of outer effects stays consistent\n\treturn flush_sync(() => _mount(component, { ...options, anchor }), false);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @param {import('../../index.js').ComponentType<import('../../index.js').SvelteComponent<Props, Events>>} component\n * @param {{\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: { [Property in keyof Events]: (e: Events[Property]) => any };\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tif (DEV) {\n\t\tvalidate_component(component);\n\t}\n\n\tconst target = options.target;\n\tconst previous_hydrate_nodes = hydrate_nodes;\n\n\tlet hydrated = false;\n\n\ttry {\n\t\t// Don't flush previous effects to ensure order of outer effects stays consistent\n\t\treturn flush_sync(() => {\n\t\t\tset_hydrating(true);\n\n\t\t\tvar node = target.firstChild;\n\t\t\twhile (\n\t\t\t\tnode &&\n\t\t\t\t(node.nodeType !== 8 || /** @type {Comment} */ (node).data !== HYDRATION_START)\n\t\t\t) {\n\t\t\t\tnode = node.nextSibling;\n\t\t\t}\n\n\t\t\tif (!node) {\n\t\t\t\te.hydration_missing_marker_open();\n\t\t\t}\n\n\t\t\tconst anchor = hydrate_anchor(node);\n\t\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\t\t// flush_sync will run this callback and then synchronously run any pending effects,\n\t\t\t// which don't belong to the hydration phase anymore - therefore reset it here\n\t\t\tset_hydrating(false);\n\t\t\thydrated = true;\n\n\t\t\treturn instance;\n\t\t}, false);\n\t} catch (error) {\n\t\tif (!hydrated && options.recover !== false) {\n\t\t\tw.hydration_mismatch();\n\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t} finally {\n\t\tset_hydrating(!!previous_hydrate_nodes);\n\t\tset_hydrate_nodes(previous_hydrate_nodes);\n\t\treset_head_anchor();\n\t}\n}\n\n/**\n * @template {Record<string, any>} Exports\n * @param {import('../../index.js').ComponentType<import('../../index.js').SvelteComponent<any>>} Component\n * @param {{\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tanchor: Node;\n * \t\tprops?: any;\n * \t\tevents?: any;\n * \t\tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = false }) {\n\tinit_operations();\n\n\tconst registered_events = new Set();\n\n\tconst bound_event_listener = handle_event_propagation.bind(null, target);\n\tconst bound_document_event_listener = handle_event_propagation.bind(null, document);\n\n\t/** @param {Array<string>} events */\n\tconst event_handle = (events) => {\n\t\tfor (let i = 0; i < events.length; i++) {\n\t\t\tconst event_name = events[i];\n\t\t\tif (!registered_events.has(event_name)) {\n\t\t\t\tregistered_events.add(event_name);\n\t\t\t\t// Add the event listener to both the container and the document.\n\t\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t\t// the outer content stops propagation of the event.\n\t\t\t\ttarget.addEventListener(\n\t\t\t\t\tevent_name,\n\t\t\t\t\tbound_event_listener,\n\t\t\t\t\tPassiveDelegatedEvents.includes(event_name)\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tpassive: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t: undefined\n\t\t\t\t);\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(\n\t\t\t\t\tevent_name,\n\t\t\t\t\tbound_document_event_listener,\n\t\t\t\t\tPassiveDelegatedEvents.includes(event_name)\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tpassive: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t: undefined\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tlet component = undefined;\n\n\tconst unmount = effect_root(() => {\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {import('#client').ComponentContext} */ (current_component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (const event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, bound_event_listener);\n\t\t\t}\n\t\t\troot_event_handles.delete(event_handle);\n\t\t\tmounted_components.delete(component);\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n * @param {Record<string, any>} component\n */\nexport function unmount(component) {\n\tconst fn = mounted_components.get(component);\n\tif (DEV && !fn) {\n\t\tw.lifecycle_double_unmount();\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.trace('stack trace');\n\t}\n\tfn?.();\n}\n\n/**\n * @param {Record<string, any>} props\n * @returns {Record<string, any>}\n */\nexport function sanitize_slots(props) {\n\tconst sanitized = { ...props.$$slots };\n\tif (props.children) sanitized.default = props.children;\n\treturn sanitized;\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n */\nexport async function append_styles(target, style_sheet_id, styles) {\n\t// Wait a tick so that the template is added to the dom, else getRootNode() will yield wrong results\n\t// If it turns out that this results in noticeable flickering, we need to do something like doing the\n\t// append outside and adding code in mount that appends all stylesheets (similar to how we do it with event delegation)\n\tawait Promise.resolve();\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = create_element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_child(/** @type {Document} */ (append_styles_to).head || append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n */\nfunction get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn /** @type {Document} */ (node.ownerDocument);\n}\n", "import { proxy } from '../internal/client/proxy.js';\nimport { user_pre_effect } from '../internal/client/reactivity/effects.js';\nimport { hydrate, mount, unmount } from '../internal/client/render.js';\nimport { define_property } from '../internal/client/utils.js';\n\n/**\n * Takes the same options as a Svelte 4 component and the component function and returns a Svelte 4 compatible component.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {import('svelte').ComponentConstructorOptions<Props> & {\n * \tcomponent: import('svelte').ComponentType<import('svelte').SvelteComponent<Props, Events, Slots>>;\n * \timmutable?: boolean;\n * \thydrate?: boolean;\n * \trecover?: boolean;\n * }} options\n * @returns {import('svelte').SvelteComponent<Props, Events, Slots> & Exports}\n */\nexport function createClassComponent(options) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn new Svelte4Component(options);\n}\n\n/**\n * Takes the component function and returns a Svelte 4 compatible component constructor.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {import('svelte').SvelteComponent<Props, Events, Slots>} component\n * @returns {import('svelte').ComponentType<import('svelte').SvelteComponent<Props, Events, Slots> & Exports>}\n */\nexport function asClassComponent(component) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn class extends Svelte4Component {\n\t\t/** @param {any} options */\n\t\tconstructor(options) {\n\t\t\tsuper({\n\t\t\t\tcomponent,\n\t\t\t\t...options\n\t\t\t});\n\t\t}\n\t};\n}\n\nclass Svelte4Component {\n\t/** @type {any} */\n\t#events;\n\n\t/** @type {Record<string, any>} */\n\t#instance;\n\n\t/**\n\t * @param {import('svelte').ComponentConstructorOptions & {\n\t *  component: any;\n\t * \timmutable?: boolean;\n\t * \thydrate?: boolean;\n\t * \trecover?: false;\n\t * }} options\n\t */\n\tconstructor(options) {\n\t\t// Using proxy state here isn't completely mirroring the Svelte 4 behavior, because mutations to a property\n\t\t// cause fine-grained updates to only the places where that property is used, and not the entire property.\n\t\t// Reactive statements and actions (the things where this matters) are handling this properly regardless, so it should be fine in practise.\n\t\tconst props = proxy({ ...(options.props || {}), $$events: {} }, false);\n\t\tthis.#instance = (options.hydrate ? hydrate : mount)(options.component, {\n\t\t\ttarget: options.target,\n\t\t\tprops,\n\t\t\tcontext: options.context,\n\t\t\tintro: options.intro,\n\t\t\trecover: options.recover\n\t\t});\n\n\t\tthis.#events = props.$$events;\n\n\t\tfor (const key of Object.keys(this.#instance)) {\n\t\t\tif (key === '$set' || key === '$destroy' || key === '$on') continue;\n\t\t\tdefine_property(this, key, {\n\t\t\t\tget() {\n\t\t\t\t\treturn this.#instance[key];\n\t\t\t\t},\n\t\t\t\t/** @param {any} value */\n\t\t\t\tset(value) {\n\t\t\t\t\tthis.#instance[key] = value;\n\t\t\t\t},\n\t\t\t\tenumerable: true\n\t\t\t});\n\t\t}\n\n\t\tthis.#instance.$set = /** @param {Record<string, any>} next */ (next) => {\n\t\t\tObject.assign(props, next);\n\t\t};\n\t\tthis.#instance.$destroy = () => {\n\t\t\tunmount(this.#instance);\n\t\t};\n\t}\n\n\t/** @param {Record<string, any>} props */\n\t$set(props) {\n\t\tthis.#instance.$set(props);\n\t}\n\n\t/**\n\t * @param {string} event\n\t * @param {(...args: any[]) => any} callback\n\t * @returns {any}\n\t */\n\t$on(event, callback) {\n\t\tthis.#events[event] = this.#events[event] || [];\n\n\t\t/** @param {any[]} args */\n\t\tconst cb = (...args) => callback.call(this, ...args);\n\t\tthis.#events[event].push(cb);\n\t\treturn () => {\n\t\t\tthis.#events[event] = this.#events[event].filter(/** @param {any} fn */ (fn) => fn !== cb);\n\t\t};\n\t}\n\n\t$destroy() {\n\t\tthis.#instance.$destroy();\n\t}\n}\n\n/**\n * Runs the given function once immediately on the server, and works like `$effect.pre` on the client.\n *\n * @deprecated Use this only as a temporary solution to migrate your component code to Svelte 5.\n * @param {() => void | (() => void)} fn\n * @returns {void}\n */\nexport function run(fn) {\n\tuser_pre_effect(fn);\n}\n"],
  "mappings": "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",
  "names": ["source", "effect", "child", "sibling", "child", "derived", "effect", "sibling", "current_effect", "child", "get", "proxy", "unwrap", "is_array", "s", "child", "event", "events", "unmount", "event"]
}
